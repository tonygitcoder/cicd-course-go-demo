apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "db"
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_NAME
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
          lifecycle:
            postStart:
              exec:
                command: [
                  "sh", "-c", "
                  until psql -h localhost -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\" -f /docker-entrypoint-initdb.d/init.sql; do
                    echo \"Waiting for PostgreSQL to be ready...\";
                    sleep 2;
                  done
                  "
                ]
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pvc
        - name: init-sql
          configMap:
            name: db-init-sql
